jobs:
  include:
    - os: osx
      osx_image: xcode10.2
      language: node_js
      node_js: "12"
      # env:
      #   - ELECTRON_CACHE=$HOME/.cache/electron
      #   - ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder

    # Windows currently doesn't support encrypted variables.
    # Once supported uncomment this out & remove build with Docker
    #
    # - os: windows
    #   language: node_js
    #   node_js: "12"

    - os: linux
      services: docker
      language: generic

cache:
  yarn: true
  directories:
    - node_modules
    - dist_electron
    - dist

install:
  - |
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      brew install yarn;
    fi
script:
  - |
    if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      docker run --rm \
        -e GH_TOKEN=$GITHUB_OAUTH_TOKEN \
        -v $PWD:/project \
        -v ~/.cache/electron:/root/.cache/electron \
        -v ~/.cache/electron-builder:/root/.cache/electron-builder \
        electronuserland/builder:wine \
        /bin/bash -c "yarn install --link-duplicates --pure-lockfile && yarn electron:build --win portable"
    elif [ "$TRAVIS_OS_NAME" == "windows" ]; then
      npm install;
      npm run electron:build;
    else
      # security create-keychain -p $KEYCHAIN_PASSWORD build.keychain;
      # security default-keychain -s build.keychain;
      # security unlock-keychain -p $KEYCHAIN_PASSWORD build.keychain;
      # echo $KEYSTORE | base64 --decode - > keystore.p12;
      # security import keystore.p12 -k build.keychain -P $KEYCHAIN_PASSWORD -T /usr/bin/codesign;
      yarn install;
      yarn electron:build;
    fi
  - ls dist_electron
before_cache:
  - rm -rf $HOME/.cache/electron-builder/wine

# branches:
#   except:
#     - "/^v\\d+\\.\\d+\\.\\d+$/"

deploy:
  provider: releases
  token: "$GITHUB_OAUTH_TOKEN"
  file:
    - "dist_electron/*.zip"
    - "dist_electron/*.exe"
  on:
    # tags: true
    branch: master